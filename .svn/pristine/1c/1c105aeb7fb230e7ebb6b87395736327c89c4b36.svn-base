package org.system.controller.iface.chat;

import java.util.Map;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.chat.WeixinRecords;
import org.utils.spring.Groups;

/**
 * @ClassName: IWeixinRecordsController
 * @Description: 微信聊天记录
 * @author: LiuGangQiang
 * @date: 2016年5月16日 上午10:13:10
 */
@RequestMapping
public interface IWeixinRecordsController {

	/**
	 * @Title: insertWeixinRecordsByUser
	 * @Description: 用户新增指定医生聊天信息
	 * @param weixinRecords
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/user/weixinRecords", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("weixinRecords:insert:user")
	public Map<String, Object> insertWeixinRecordsByUser(
			@Validated({ WeixinRecords.InsertByUser.class }) WeixinRecords weixinRecords, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * @Title: insertWeixinRecordsByDoctor
	 * @Description: 医生新增指定用户聊天信息
	 * @param weixinRecords
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/doctor/weixinRecords", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("weixinRecords:insert:doctor")
	public Map<String, Object> insertWeixinRecordsByDoctor(
			@Validated({ WeixinRecords.InsertByDoctor.class }) WeixinRecords weixinRecords, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * @Title: getWeixinRecordsDetailByUser
	 * @Description: 用户获取指定医生聊天记录
	 * @param weixinRecords
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/user/weixinRecords", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("weixinRecords:detail:user")
	public Map<String, Object> getWeixinRecordsDetailByUser(
			@Validated({ WeixinRecords.SelectByUser.class }) WeixinRecords weixinRecords, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * @Title: getWeixinRecordsDetailByDoctor
	 * @Description: 医生获取指定用户聊天记录
	 * @param weixinRecords
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/doctor/weixinRecords", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("weixinRecords:detail:doctor")
	public Map<String, Object> getWeixinRecordsDetailByDoctor(
			@Validated({ WeixinRecords.SelectByDoctor.class }) WeixinRecords weixinRecords, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * @Title: getWeixinRecordsListByUser
	 * @Description: 用户获取所有医生消息的条数
	 * @param weixinRecords
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/user/weixinRecordss", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("weixinRecords:list:user")
	public Map<String, Object> getWeixinRecordsListByUser(
			@Validated({ Groups.Select.class }) WeixinRecords weixinRecords, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * @Title: getWeixinRecordsListByDoctor
	 * @Description: 医生获取所有用户消息的条数
	 * @param weixinRecords
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/doctor/weixinRecordss", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("weixinRecords:list:doctor")
	public Map<String, Object> getWeixinRecordsListByDoctor(
			@Validated({ Groups.Select.class }) WeixinRecords weixinRecords, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

}