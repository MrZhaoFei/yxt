package org.system.controller.iface.doc;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.doc.DocTmplate;
import org.utils.spring.Groups;

@RequestMapping("/admin")
public interface IDocTmplateController {
	
	/**
	 * 新增模板文档
	 * 
	 * @param docTmplate
	 * @param result
	 * @return
	 */
	@RequestMapping(value = { "/docTmplate" }, method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> insertDocTmplate(
			@Validated({ Groups.Insert.class }) DocTmplate docTmplate, BindingResult result);

	
	/**
	 * 修改模板文档
	 * 
	 * @param selfTestAnswerId
	 * @param docTmplate
	 * @param result
	 * @return
	 */
	@RequestMapping(value = { "/docTmplate/{docId}" }, method = RequestMethod.PUT)
	@ResponseBody
	public Map<String, Object> updatetDocTmplate(@PathVariable("docId") Integer docId,
			@Validated({ Groups.Update.class }) DocTmplate docTmplate, BindingResult result);
	
	
	/**
	 * 查询模板文档列表
	 * 
	 * @param docTmplate
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/docTmplates", method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> getDocTmplateList(@Validated({ Groups.Select.class }) DocTmplate docTmplate, BindingResult result,HttpServletRequest req);
	
	/**
	 * 查询模板文档详情
	 * 
	 * @param selfTestAnswerId
	 * @param docTmplate
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/docTmplate/{docId}", method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> getDocTmplateDetail(@PathVariable("docId") Integer docId,DocTmplate docTmplate, BindingResult result);
	
	
	/**
	 * 删除模板文档
	 * @param selfTestAnswerId
	 * @param docTmplate
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/docTmplate/{docId}", method = RequestMethod.DELETE)
	@ResponseBody
	public  Map<String, Object> deleteDocTmplate(@PathVariable("docId") Integer docId,DocTmplate docTmplate, BindingResult result);
	
}
