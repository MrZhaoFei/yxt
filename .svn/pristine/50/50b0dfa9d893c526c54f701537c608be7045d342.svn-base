package org.system.entity.chat;

import java.util.Date;

import javax.validation.constraints.NotNull;

import org.core.entity.BaseEntity;
import org.springframework.format.annotation.DateTimeFormat;
import org.utils.spring.Groups;

public class WeixinRecordsHistoryInfo extends BaseEntity {
	private Long id;
	@NotNull(message = "{doctor.id.notnull.valid}", groups = { SelectByUser.class })
	private Integer doctorId;

	@NotNull(message = "{user.id.notnull.valid}", groups = { SelectByDoctor.class })
	private Integer userId;

	private Integer messageTo;

	private String content;

	private String attachmentUrl;

	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	private Date startDate;
	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	private Date endDate;
	private Date sendTime;

	public interface SelectByUser {
	}

	public interface SelectByDoctor {
	}

	public Date getStartDate() {
		return startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	public Date getEndDate() {
		return endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Integer getDoctorId() {
		return doctorId;
	}

	public void setDoctorId(Integer doctorId) {
		this.doctorId = doctorId;
	}

	public Integer getUserId() {
		return userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	public Integer getMessageTo() {
		return messageTo;
	}

	public void setMessageTo(Integer messageTo) {
		this.messageTo = messageTo;
	}

	public String getContent() {
		return content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	public String getAttachmentUrl() {
		return attachmentUrl;
	}

	public void setAttachmentUrl(String attachmentUrl) {
		this.attachmentUrl = attachmentUrl;
	}

	public Date getSendTime() {
		return sendTime;
	}

	public void setSendTime(Date sendTime) {
		this.sendTime = sendTime;
	}

	@Override
	@NotNull(message = "{page.empty}", groups = { SelectByDoctor.class, SelectByUser.class, Groups.Select.class })
	public Integer getPage() {
		return super.getPage();
	}

	@Override
	@NotNull(message = "{rows.empty}", groups = { SelectByDoctor.class, SelectByUser.class, Groups.Select.class })
	public Integer getRows() {
		return super.getRows();
	}
}