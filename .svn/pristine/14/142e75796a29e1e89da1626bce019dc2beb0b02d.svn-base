package org.system.controller.impl.hospital;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.core.result.ResultCode;
import org.core.result.ResultMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.system.Global;
import org.system.controller.iface.hospital.IHospitalController;
import org.system.entity.hospital.Hospital;
import org.system.message.Message;
import org.system.service.iface.hospital.IHospitalService;

import net.sf.ehcache.CacheManager;
import net.sf.ehcache.Element;
@Controller
public class HospitalController implements IHospitalController{

	Logger log = LoggerFactory.getLogger(HospitalController.class);
	@Resource
	private CacheManager cache;
	@Resource
	private IHospitalService hospitalService;
	
	@Override
	public Map<String, Object> insertHospital(Hospital hospital, BindingResult result, String token) {
		return null;
	}

	@Override
	public Map<String, Object> getHospitalDetail(Integer hospiDepartDoctorRelationId, Hospital hospital,
			BindingResult result, String token) {
		// 缓存中获取用户数据
		Element element = cache.getCache(Global.CACHE_USER).get(token);
		if (element != null) {
			Map<String, Object> resultMap = hospitalService.getHospitalDetail(hospital);
			if (resultMap != null && resultMap.size() > 0) {
				
				return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
			} else {
				return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
			}
		} else {
			return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		}
	}

	@Override
	public Map<String, Object> getHospitalList(Hospital hospital, BindingResult result, String token) {
		// 缓存中获取用户数据
		Element element = cache.getCache(Global.CACHE_DOCTOR).get(token);
		if (element != null) {
			//设置医疗机构类型 type
			hospital.setType(1);
			
			Map<String, Object> resultMap = new HashMap<>();
			List<Map<String, Object>> dataList = hospitalService.getHospitalList(hospital);
			if (dataList != null && dataList.size() > 0) {
				// 得到总数
				resultMap.put(Global.DATA_TOTAL, hospital.getTotal());
				resultMap.put(Global.DATA_ROWS, dataList);
				return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
			} else {
				return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
			}
		} else {
			return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		}
	}

	@Override
	public Map<String, Object> deleteHospital(Integer hospiDepartDoctorRelationId, Hospital hospital,
			BindingResult result, String token) {
		return null;
	}




}
