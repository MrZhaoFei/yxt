package org.system.controller.iface.sms;

import java.util.Map;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.sms.SmsSendTask;
import org.utils.spring.Groups;

@RequestMapping(value = { "/common" })
public interface ISmsSendTaskController {

	/**
	 * 新增短信
	 * 
	 * @param sms
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/insertSms", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("smsSendTask:insert")
	public Map<String, Object> insertSmsSendTask(@Validated({ Groups.Insert.class }) SmsSendTask sms,
			BindingResult result, @RequestHeader(value = "token", required = false) String token);

	/**
	 * 短信列表
	 * 
	 * @param packageType
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/getSmsSendTaskList", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("smsSendTask:list")
	public Map<String, Object> getSmsSendTaskList(@Validated({ Groups.Select.class }) SmsSendTask sms,
			BindingResult result, @RequestHeader(value = "token", required = false) String token);

	/**
	 * 修改短信
	 * 
	 * @param smsId
	 * @param sms
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/updateSms/{smsId}", method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("smsSendTask:update")
	public Map<String, Object> updateSmsSendTask(@PathVariable("smsId") Long smsId,
			@Validated({ Groups.Update.class }) SmsSendTask sms, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 删除短信
	 * 
	 * @param smsId
	 * @param sms
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/deleteSms/{smsId}", method = RequestMethod.DELETE)
	@ResponseBody
	@RequiresPermissions("smsSendTask:delete")
	public Map<String, Object> deleteSmsSendTask(@PathVariable("smsId") Long smsId,
			@Validated({ Groups.Delete.class }) SmsSendTask sms, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * @Title: getSmsSendHistoryList
	 * @Description: 医生获取用户的短信历史纪录
	 * @param sms
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/getSmsSendHistoryList", method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> getSmsSendHistoryList(@Validated({ Groups.Other.class }) SmsSendTask sms,
			BindingResult result, @RequestHeader(value = "token", required = false) String token);
}
