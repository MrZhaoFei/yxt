package org.system.controller.impl.content;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.core.result.ResultCode;
import org.core.result.ResultMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.system.Global;
import org.system.controller.iface.content.IContentController;
import org.system.entity.content.Content;
import org.system.message.Message;
import org.system.service.impl.content.ContentService;

@Controller
public class ContentController implements IContentController {
	
	
	Logger log = LoggerFactory.getLogger(ContentController.class);
	
	@Resource
	private ContentService contentService;

	
	/**
	 * 新增短信内容
	 */
	@Override
	public Map<String, Object> insertContent(Content content, BindingResult result) {
		       // 检查数据是否存在
				Map<String, Object> sttMap = contentService.getContentByFiled(content);
				if (sttMap != null && sttMap.size() > 0) {
					return ResultMap.convertMap(ResultCode.CODE_DATA_EXISTS, Message.bundle("data.exists"));
				}
				// 执行新增操作
				if (contentService.insertContent(content)> 0) {
					return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("insert.success"));
				}
				return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("insert.fail"));
	}

	/**
	 * 修改短信内容
	 */
	@Override
	public Map<String, Object> updatetContent(Integer id, Content content, BindingResult result) {
		content.setId(id);
		// 检查数据是否存在
		Map<String, Object> sttMap =  contentService.getContentByFiled(content);
		if (sttMap != null && sttMap.size() > 0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EXISTS, Message.bundle("data.exists"));
		}
		// 执行修改操作
		if (contentService.updateContent(content) > 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("update.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("update.fail"));
	}

	/**
	 * 删除短信内容
	 */
	@Override
	public Map<String, Object> deleteContent(Integer id, Content content, BindingResult result) {
		// 设置实例id属性
		content.setId(id);
		Map<String,Object> list=contentService.getContentDetail(content);
		if(list==null || list.size()<=0){
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY,Message.bundle("content.empty"));
		}
		// 执行修改操作
		if (contentService.deleteContent(content) > 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("delete.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("delete.fail"));
	}

	/**
	 * 全部的短信内容表
	 */
	@Override
	public Map<String, Object> getContentList(Content content, BindingResult result,HttpServletRequest req) {	
		// 获取session
		 HttpSession session=req.getSession();
		 if(session.getAttribute("user")!=null){
			 // 定义返回对象
			 Map<String, Object> resultMap = new HashMap<>();
			 List<Map<String, Object>> sttList = contentService.getContents(content);
			 if (sttList != null && sttList.size() > 0) {
				 // 得到数据总数
				 resultMap.put(Global.DATA_TOTAL, content.getTotal());
				 resultMap.put(Global.DATA_ROWS, sttList);
				 return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
			 }
			 return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
			 
		 }else{
				return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
			}
		 
	}

	/**
	 * 短信内容表的细节
	 */
	@Override
	public Map<String, Object> getContentDetail(Integer id, Content content, BindingResult result) {
		  // 设置实例的id属性
		content.setId(id);
				Map<String, Object> resultList = contentService.getContentDetail(content);
				if (resultList != null && resultList.size() > 0) {
					return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultList, Message.bundle("query.success"));
				}
				return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
	}

	/**
	 * 删除短信内容通过短信模板id
	 */
	@Override
	public Map<String, Object> deleteContentByContentTypeId(Integer id, Content content, BindingResult result) {
		content.setId(id);
		// 执行修改操作
		if (contentService.deleteContentByContentTypeId(content)> 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("delete.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("delete.fail"));
	}

}
