package org.system.service.impl.user;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;
import org.system.entity.user.User;
import org.system.mapper.user.UserMapper;
import org.system.service.iface.user.IUserService;

@Service
public class UserService implements IUserService {
	@Resource
	private UserMapper mapper;

	@Override
	@Cacheable(value = "permissionCache", key = "#userMap[id]+'_permission'")
	public List<Map<String, Object>> getPermission(Map<String, Object> userMap) {
		return mapper.getPermission(userMap);
	}

	@Override
	public Map<String, Object> getUserByWechatId(User user) {
		return mapper.getUserByWechatId(user);
	}

	@Override
	public Map<String, Object> checkUserExists(User user) {
		return mapper.checkExists(user);
	}

	@Override
	public int updateUserWechat(User user) {
		return mapper.updateForPhone(user);
	}

	@Override
	public List<Map<String, Object>> getUserByFiled(User user) {
		return mapper.getUserByFiled(user);
	}

	@Override
	public int updateUserWechatUnBind(User user) {
		return mapper.updateUserWechatUnBind(user);
	}

	@Override
	public int insertUser(User user) {
		return mapper.insert(user);
	}

	@Override
	public Map<String, Object> getUserByDetailFiled(User user) {
		return mapper.getUserByDetailFiled(user);
	}

	@Override
	public Map<String, Object> getUserDetail(User user) {
		return mapper.getUserDetail(user);
	}

	@Override
	public int updateUser(User user) {
		return mapper.update(user);
	}

	@Override
	public List<Map<String, Object>> getUserList(Map<String, Object> param) {
		return mapper.getUserListByMap(param);
	}
}
