package org.system.entity.user.healthtest;

import java.util.Date;

import javax.validation.constraints.NotNull;

import org.core.entity.BaseEntity;
import org.springframework.format.annotation.DateTimeFormat;
import org.utils.spring.Groups;

public class UserDailyBloodPressure extends BaseEntity {
	private Integer id;

	@NotNull(message="{user.id.notnull.valid}",groups={Groups.Other.class})
	private Integer userId;

	@NotNull(message="{userDailyBloodPressure.highPressure.notnull.valid}",groups={Groups.Insert.class,Groups.Other.class})
	private Integer highPressure;

	@NotNull(message="{userDailyBloodPressure.lowPressure.notnull.valid}",groups={Groups.Insert.class,Groups.Other.class})
	private Integer lowPressure;
	
	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	private Date startDate;
	
	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	private Date endDate;
	
	@DateTimeFormat(pattern = "yyyy-MM-dd")
	@NotNull(message="{userDailyBloodSugar.date.notnull.valid}",groups={Groups.Other.class})
	private Date date;

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getUserId() {
		return userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	public Integer getHighPressure() {
		return highPressure;
	}

	public void setHighPressure(Integer highPressure) {
		this.highPressure = highPressure;
	}

	public Integer getLowPressure() {
		return lowPressure;
	}

	public void setLowPressure(Integer lowPressure) {
		this.lowPressure = lowPressure;
	}

	public Date getDate() {
		return date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	public Date getStartDate() {
		return startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	public Date getEndDate() {
		return endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Override
	@NotNull(message = "{page.empty}", groups = { Groups.Select.class })
	public Integer getPage() {
		return super.getPage();
	}

	@Override
	@NotNull(message = "{rows.empty}", groups = { Groups.Select.class })
	public Integer getRows() {
		return super.getRows();
	}
}