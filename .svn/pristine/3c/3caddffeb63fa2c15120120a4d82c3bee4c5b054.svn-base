package org.system.controller.iface;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.AdminUser;
import org.utils.spring.Groups;

@RequestMapping("/admin")
public interface IAdminUserController {
	/**
	 * login
	 * @param 
	 * @param 
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/adminUser/login", method = RequestMethod.GET)
	@ResponseBody

	public Map<String, Object> getLoginAdminUser(@Validated({ Groups.Select.class }) AdminUser adminUser, BindingResult result,HttpSession session) throws Exception ;

	
	
	

	/**
	 * 新增
	 * @param adminUser
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/adminUser/insert", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("adminUser:insert")
	public Map<String, Object> insertAdminUser(@Validated({ Groups.Insert.class }) AdminUser adminUser, BindingResult result);

	
	/**
	 * 修改
	 * @param id
	 * @param adminUser
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/adminUser/{id}/update", method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("adminUser:update")
	public Map<String, Object> updateAdminUser(@PathVariable("id") Integer id,
			@Validated({ Groups.Update.class }) AdminUser adminUser, BindingResult result);
	
	
	/**
	 * 所有的
	 * @param adminUser
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/adminUser", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("adminUser:list")
	public Map<String, Object> getAdminUserList(@Validated({ Groups.Select.class }) AdminUser adminUser, BindingResult result,HttpServletRequest req);

	
	/**
	 * 单个信息
	 * @param id
	 * @param department
	 * @return
	 */
	@RequestMapping(value = "/adminUser/{id}/detail", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("adminUser:detail")
	public Map<String, Object> getAdminUserDetail(@PathVariable("id") Integer id, AdminUser adminUser);
	
	/**
	 * 删除
	 * @param adminUser
	 * @param id
	 * @return
	 */
	@RequestMapping(value = "/adminUser/{id}/delete", method = RequestMethod.DELETE)
	@ResponseBody
	@RequiresPermissions("adminUser:delete")
	public  Map<String, Object> deleteAdminUser(@PathVariable("id") Integer id, AdminUser adminUser);
	
	/**
	 * @Title: getStoreToken
	 * @Description: 得到文件服务器的口令
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/store", method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> getStoreToken(@RequestHeader(value = "user", required = false) String user,HttpServletRequest req);

}
