package org.system.controller.impl.service.visits;

import java.util.Date;
import java.util.Map;

import javax.annotation.Resource;

import org.core.result.ResultCode;
import org.core.result.ResultMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.system.Global;
import org.system.controller.iface.service.visits.ITnbFollowupFzcheckRecordsController;
import org.system.entity.service.visits.TnbFollowupFzcheckRecords;
import org.system.entity.service.visits.TnbFollowupRecords;
import org.system.message.Message;
import org.system.service.iface.service.visits.ITnbFollowupFzcheckRecordsService;
import org.system.service.iface.service.visits.ITnbFollowupRecordsService;

import net.sf.ehcache.CacheManager;
import net.sf.ehcache.Element;
@Controller
public class TnbFollowupFzcheckRecordsController implements ITnbFollowupFzcheckRecordsController
{

	Logger log=LoggerFactory.getLogger(TnbFollowupFzcheckRecordsController.class);
	
	@Resource
	private CacheManager cache;
	@Resource
	private ITnbFollowupRecordsService  tnbFollowupRecordsService ;
	@Resource
	private ITnbFollowupFzcheckRecordsService tnbFollowupFzcheckRecordsService;
	
	@Override
	public Map<String, Object> insertTnbFollowupFzcheckRecords(TnbFollowupFzcheckRecords tnbFollowupFzcheckRecords,
			BindingResult result, String token) {
		// 缓存中获取医生数据
		Element element = cache.getCache(Global.CACHE_DOCTOR).get(token);
		if (element != null) {
			// 判断糖尿病随访记录是否存在
			TnbFollowupRecords tfr=new TnbFollowupRecords();
			tfr.setId(tnbFollowupFzcheckRecords.getTnbFollowupRecordsId());
			Map<String, Object> tfrMap =tnbFollowupRecordsService.getTnbFollowupRecordsDetail(tfr);
			if (tfrMap == null || tfrMap.size() <= 0) {
				return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("followupRecords.empty"));
			}
/*			//设置医疗机构编码
			tnbFollowupFzcheckRecords.setYljgbm((String)tfrMap.get("yljgbm"));
			//设置健康档案编号
			tnbFollowupFzcheckRecords.setJkdabh((String)tfrMap.get("jkdabh"));
			//设置随访记录编号
			tnbFollowupFzcheckRecords.setSfjlbh((String)tfrMap.get("sfjlbh"));*/
			//设置默认值 作废标志 0正常，1作废
			tnbFollowupFzcheckRecords.setZfbz("0");
			//设置默认值 数据更新时间 为当前时间
			tnbFollowupFzcheckRecords.setUpdateTime(new Date());
			//执行新增操作
			if (tnbFollowupFzcheckRecordsService.insertTnbFollowupFzcheckRecords(tnbFollowupFzcheckRecords)>0) {
				return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("insert.success"));
			}
			return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("insert.fail"));
		}else {
			return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		}
	}
}
