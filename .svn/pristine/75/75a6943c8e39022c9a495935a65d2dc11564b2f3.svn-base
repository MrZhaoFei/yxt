package org.system.controller.iface;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.DoctorType;
import org.system.entity.Hospital;
import org.utils.spring.Groups;

@RequestMapping("/admin")
public interface IDoctorTypeController {
	
	
	/**
	 * 新增
	 * @param doctorType
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/doctorType/insert", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("doctorType:insert")
	public Map<String, Object> insertDoctorType(@Validated({ Groups.Insert.class }) DoctorType doctorType, BindingResult result);

	
	/**
	 * 修改
	 * @param id
	 * @param doctorType
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/doctorType/{id}/update", method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("doctorType:update")
	public Map<String, Object> updateDoctorType(@PathVariable("id") Integer id,
			@Validated({ Groups.Update.class }) DoctorType doctorType, BindingResult result);
	
	
	/**
	 * 所有的
	 * @param doctorType
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/doctorType", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("doctorType:list")
	public Map<String, Object> getDoctorTypeList(@Validated({ Groups.Select.class }) DoctorType doctorType, BindingResult result,HttpServletRequest req);

	
	/**
	 * 单个信息
	 * @param DoctorType
	 * @param DoctorType
	 * @return
	 */
	@RequestMapping(value = "/doctorType/{id}", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("doctorType:detail")
	public Map<String, Object> getDoctorTypeDetail(@PathVariable("id") Integer id, DoctorType doctorType);
	
	
	/**
	 * 删除
	 * @param diseaseId
	 * @param disease
	 * @return
	 */
	@RequestMapping(value = "/doctorType/{id}/delete", method = RequestMethod.DELETE)
	@ResponseBody
	@RequiresPermissions("doctorType:delete")
	public  Map<String, Object> deleteDoctorType(@PathVariable("id") Integer id, DoctorType doctorType);
	

}
