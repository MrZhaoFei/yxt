package org.system.service.impl.doctor;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;
import org.system.entity.doctor.Doctor;
import org.system.mapper.doctor.DoctorMapper;
import org.system.service.iface.doctor.IDoctorService;

@Service
public class DoctorService implements IDoctorService {
	@Resource
	private DoctorMapper mapper;

	@Override
	@Cacheable(value = "permissionCache", key = "#userMap[id]+'_permission'")
	public List<Map<String, Object>> getPermission(Map<String, Object> userMap) {
		return mapper.getPermission(userMap);
	}

	@Override
	public Map<String, Object> getDoctor(Doctor doctor) {
		return mapper.queryOne(doctor);
	}

	@Override
	public List<Map<String, Object>> getDoctorList(Doctor doctor) {
		return mapper.queryAll(doctor);
	}

	@Override
	public Map<String, Object> getDoctorDetil(Doctor doctor) {
		return mapper.getDoctorDetil(doctor);
	}

	@Override
	public Map<String, Object> getDoctorByFiled(Doctor doctor) {
		return mapper.getDoctorByFiled(doctor);
	}

	@Override
	public int updateById(Doctor doctor) {
		return mapper.updateById(doctor);
	}

	@Override
	public int updateByName(Doctor doctor) {
		return mapper.updateByName(doctor);
	}

	@Override
	public List<Map<String, Object>> getDoctorPatientsList(Doctor doctor) {
		return mapper.getDoctorPatientsList(doctor);
	}

	@Override
	public int updateByPhone(Doctor doctor) {
		return mapper.updateByPhone(doctor);
	}

}
