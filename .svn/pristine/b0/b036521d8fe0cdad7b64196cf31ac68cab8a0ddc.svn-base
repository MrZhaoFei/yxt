package org.system.controller.iface;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.service.ProductService;
import org.utils.spring.Groups;


@RequestMapping("/admin")
public interface IProductServiceController {
   
	/**
	 * 所有的
	 * @param productService
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/productService", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("productService:list")
	public Map<String, Object> getProductServiceList(@Validated({ Groups.Select.class }) ProductService productService, BindingResult result,HttpServletRequest req);
	
	

	/**
	 * 新增
	 * @param productService
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/productService/insert", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("productService:insert")
	public Map<String, Object> insertProductService(@Validated({ Groups.Insert.class }) ProductService productService, BindingResult result);
	
	
	
	
	
	/**
	 * 修改
	 * @param id
	 * @param productService
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/productService/{id}/update", method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("productService:update")
	public Map<String, Object>updateProductService (@PathVariable("id") Integer id,
			@Validated({ Groups.Update.class }) ProductService productService, BindingResult result);
	
	
	
	
	@RequestMapping(value = "/productService/{id}/notupdate", method = RequestMethod.GET)
	@ResponseBody
	public int getProductByUservice(@PathVariable("id") Integer id,@Validated({ Groups.Select.class }) ProductService productService);
	
	
	
	
	

	/**
	 * 单个信息
	 * @param ID
	 * @param productService
	 * @return
	 */
	@RequestMapping(value = "/productService/{id}/detail", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("productService:detail")
	public Map<String, Object> getProductServiceDetail(@PathVariable("id") Integer id, ProductService productService);
	
	
	/**
	 * 删除
	 * @param id
	 * @param productService
	 * @return
	 */
	@RequestMapping(value = "/productService/{id}/delete", method = RequestMethod.DELETE)
	@ResponseBody
	@RequiresPermissions("productService:delete")
	public  Map<String, Object> deleteproductService(@PathVariable("id") Integer id, ProductService productService);



	
	/**
	 * 所有的
	 * @param productService
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/productServiceNotIn", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("productService:list")
	public Map<String, Object> getProductNotIn(@Validated({ Groups.Select.class }) ProductService productService, BindingResult result);
	
	


	
	

}
