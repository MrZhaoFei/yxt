package org.system.controller.iface.service.resp;

import java.util.Map;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.service.resp.ServiceRespTask;
import org.utils.spring.Groups;

/**
 * 服务响应
 * 
 * @author MrLiu
 *
 */
@RequestMapping()
public interface IServiceRespTaskController {

	/**
	 * 用户新增服务响应
	 * 
	 * @param serviceRespTask
	 * @param resul
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/user/serviceRespTask", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("serviceRespTask:insert")
	public Map<String, Object> insertServiceRespTask(
			@Validated({ Groups.Insert.class }) ServiceRespTask serviceRespTask, BindingResult resul,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 医生新增服务响应
	 * 
	 * @param serviceRespTask
	 * @param resul
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/doctor/serviceRespTask", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("serviceRespTask:insert")
	public Map<String, Object> insertDoctorServiceRespTask(
			@Validated({ ServiceRespTask.InsertByDoctor.class }) ServiceRespTask serviceRespTask, BindingResult resul,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 医生修改服务响应
	 * 
	 * @param serviceRespTaskId
	 * @param serviceRespTask
	 * @param result
	 * @return
	 */
	@RequestMapping(value = { "/doctor/serviceRespTask/{taskId}" }, method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("serviceRespTask:update")
	public Map<String, Object> updateServiceRespTaskByDoctor(@PathVariable("taskId") Integer serviceRespTaskId,
			@Validated({ Groups.Update.class }) ServiceRespTask serviceRespTask, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 用户修改服务响应
	 * 
	 * @param serviceRespTaskId
	 * @param serviceRespTask
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = { "/user/serviceRespTask/canel/{taskId}" }, method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("serviceRespTask:update")
	public Map<String, Object> updateServiceRespTaskCanelByUser(@PathVariable("taskId") Integer serviceRespTaskId,
			@Validated({ Groups.Update.class }) ServiceRespTask serviceRespTask, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 医生获取自己的用户服务响应列表
	 * 
	 * @param serviceRespTask
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/doctor/serviceRespTasks", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("serviceRespTask:list")
	public Map<String, Object> getServiceRespTaskList(
			@Validated({ Groups.Select.class }) ServiceRespTask serviceRespTask, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 用户获取自己的用户服务响应列表
	 * 
	 * @param serviceRespTask
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/user/serviceRespTasks", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("serviceRespTask:list")
	public Map<String, Object> getServiceRespTaskListByUser(
			@Validated({ Groups.Select.class }) ServiceRespTask serviceRespTask, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 用户获取自己的用户服务响应 详情
	 * 
	 * @param serviceRespTask
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/user/serviceRespTaskDetail/{taskId}", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("serviceRespTask:detail")
	public Map<String, Object> getServiceRespTaskListByUserDetail(@PathVariable("taskId") Integer serviceRespTaskId,
			ServiceRespTask serviceRespTask, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 医生获取用户服务响应 详情
	 * 
	 * @param serviceRespTaskId
	 * @param serviceRespTask
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/doctor/serviceRespTaskDetail/{taskId}", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("serviceRespTask:detail")
	public Map<String, Object> getServiceRespTaskListByDoctorDetail(@PathVariable("taskId") Integer serviceRespTaskId,
			ServiceRespTask serviceRespTask, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 服务响应 提醒评价
	 * 
	 * @param serviceRespTaskId
	 * @param serviceRespTask
	 * @param result
	 * @return
	 */
	@RequestMapping(value = { "/doctor/serviceRespTaskRemind/{taskId}" }, method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("serviceRespTaskRemind:update")
	public Map<String, Object> updateserviceRespTaskRemind(@PathVariable("taskId") Integer serviceRespTaskId,
			@Validated({ Groups.Update.class }) ServiceRespTask serviceRespTask, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 受理服务响应
	 * 
	 * @param serviceRespTaskId
	 * @param serviceRespTask
	 * @param result
	 * @return
	 */
	@RequestMapping(value = { "/doctor/serviceRespTask/seized/{taskId}" }, method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("serviceRespTaskRemind:seized")
	public Map<String, Object> updateserviceRespTaskSeized(@PathVariable("taskId") Integer serviceRespTaskId,
			@Validated({ Groups.Update.class }) ServiceRespTask serviceRespTask, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 确认完成服务响应
	 * 
	 * @param serviceRespTaskId
	 * @param serviceRespTask
	 * @param result
	 * @return
	 */
	@RequestMapping(value = { "/doctor/serviceRespTask/sure/{taskId}" }, method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("serviceRespTaskRemind:sure")
	public Map<String, Object> updateserviceRespTaskSure(@PathVariable("taskId") Integer serviceRespTaskId,
			@Validated({ Groups.Update.class }) ServiceRespTask serviceRespTask, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 用户评价服务响应
	 * 
	 * @param serviceRespTaskId
	 * @param serviceRespTask
	 * @param result
	 * @return
	 */
	@RequestMapping(value = { "/user/serviceRespTask/rated/{taskId}" }, method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("serviceRespTaskRemind:rated")
	public Map<String, Object> updateserviceRespTaskRated(@PathVariable("taskId") Integer serviceRespTaskId,
			@Validated({ Groups.Update.class }) ServiceRespTask serviceRespTask, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

}