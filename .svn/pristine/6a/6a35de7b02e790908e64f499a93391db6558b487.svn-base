package org.system.controller.impl.doctor;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.core.result.ResultCode;
import org.core.result.ResultMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.system.Global;
import org.system.controller.iface.doctor.ITitleController;
import org.system.entity.doctor.Title;
import org.system.message.Message;
import org.system.service.iface.doctor.ITitleService;


@Controller
public class TitleController implements ITitleController {
    
	Logger log = LoggerFactory.getLogger(TitleController.class);
	
	
	@Resource
	private ITitleService titleService;
	
	/**
	 * 新增医生职称
	 */
	@Override
	public Map<String, Object> insertTitle(Title title, BindingResult result) {
		// 检查数据是否存在
		Map<String, Object> dataMap = titleService.getTitleByFiled(title);
		if (dataMap != null && dataMap.size() > 0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EXISTS, Message.bundle("data.exists"));
		}
		//执行新增操作
		if (titleService.insertTitle(title)> 0) {
			// 新增成功
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("insert.success"));
		}
		// 新增失败
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("insert.fail"));
	}
   
	/**
	 * 修改医生职称
	 */
	@Override
	public Map<String, Object> updateTitle(Integer id, Title title, BindingResult result) {
        // 设置主键
        title.setId(id);
		// 检查数据是否重复
		Map<String, Object> habitMap = titleService.getTitleByFiled(title);
		if (habitMap != null && habitMap.size() > 0) {
			// 数据已存在 返回提示结束流程
			return ResultMap.convertMap(ResultCode.CODE_DATA_EXISTS, Message.bundle("data.exists"));
		}
		// 执行修改 判断状态
		if (titleService.updateTitle(title) > 0) {
			// 修改成功 返回提示结束流程
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("update.success"));
		} else {
			// 修改失败 返回提示结束流程
			return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("update.fail"));
		}
	}

	/**
	 * 医生职称列表
	 */
	@Override
	public Map<String, Object> getTitleList(Title title, BindingResult result,HttpServletRequest req) {
		
		 HttpSession session=req.getSession();
		 if(session.getAttribute("user")!=null){
			 
			 Map<String, Object> resultMap = new HashMap<>();
			 //得到返回数据
			 List<Map<String, Object>> dataList = titleService.getTitleList(title);
			 if (dataList != null && dataList.size() > 0) {
				 //得到数据总数
				 resultMap.put(Global.DATA_TOTAL, title.getTotal());
				 resultMap.put(Global.DATA_ROWS, dataList);
				 return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
			 }
			 return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
		 }else{
			 return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		 }
	}

	/**
	 * 医生职称细节
	 */
	@Override
	public Map<String, Object> getTitleDetail(Integer id, Title title) {
		// 设置实例的id属性
		title.setId(id);
		Map<String, Object> resultList = titleService.getTitleDetail(title);
		if (resultList != null && resultList.size() > 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultList, Message.bundle("query.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
	}
   
	/**
	 * 删除医生职称
	 */
	@Override
	public Map<String, Object> deleteTitle(Integer id, Title title) {
		//设置实例的id属性
		title.setId(id);
		Map<String, Object> resultList =titleService.getTitleDetail(title); 
		if (resultList == null || resultList.size() <= 0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY,Message.bundle("title.empty"));
		}
		//执行删除操作
		if (titleService.deleteTitle(title) >0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("delete.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("delete.fail"));
	}

}
