package org.system.controller.iface.sys;

import java.util.Map;

import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.sys.SysHintMessage;
import org.utils.spring.Groups;

@RequestMapping()
public interface ISysHintMessageController {

	/** 
	 * @Title: insertSysHintMessage 
	 * @Description: 新增提醒消息
	 * @param sysHintMessage
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = { "/doctor/sysHintMessages" }, method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> insertSysHintMessage(@Validated({ Groups.Insert.class }) SysHintMessage sysHintMessage,
			BindingResult result, @RequestHeader(value = "token", required = false) String token);

	/**
	 * 查询 自己待处理的消息
	 * 
	 * @param sysHintMessage
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = { "/doctor/sysHintMessages" }, method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> getSysHintMessageList(@Validated({ Groups.Select.class }) SysHintMessage sysHintMessage,
			BindingResult result, @RequestHeader(value = "token", required = false) String token);

	/**
	 * 标记已读消息
	 * 
	 * @param messageId
	 * @param sysHintMessage
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = { "/doctor/sysHintMessageRead/{messageId}" }, method = RequestMethod.PUT)
	@ResponseBody
	public Map<String, Object> updateSysHintMessageRead(@PathVariable("messageId") Integer messageId,
			SysHintMessage sysHintMessage, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 查询 自己自己设置的消息
	 * 
	 * @param sysHintMessage
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = { "/doctor/sysHintMessagesMySet" }, method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> getMySetSysHintMessageList(
			@Validated({ Groups.Select.class }) SysHintMessage sysHintMessage, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 修改自己设置的消息
	 * 
	 * @param messageId
	 * @param sysHintMessage
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = { "/doctor/sysHintMessageMySet/{messageId}" }, method = RequestMethod.PUT)
	@ResponseBody
	public Map<String, Object> updateSysHintMessageMySet(@PathVariable("messageId") Integer messageId,
			SysHintMessage sysHintMessage, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);
	/**
	 * 删除消息提醒
	 * 
	 * @param sysHintMessage
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = { "/doctor/sysHintMessage" }, method = RequestMethod.DELETE)
	@ResponseBody
	public Map<String, Object> deletetSysHintMessage(
			@Validated({ Groups.Delete.class }) SysHintMessage sysHintMessage, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);
	
}
