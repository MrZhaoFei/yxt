package org.system.controller.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.core.result.ResultCode;
import org.core.result.ResultMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.system.Global;
import org.system.controller.iface.IDoctorTypeController;
import org.system.entity.DoctorType;
import org.system.message.Message;
import org.system.service.iface.IDoctorTypeService;
@Controller
public class DoctorTypeController implements IDoctorTypeController {
	
	Logger log = LoggerFactory.getLogger(DoctorTypeController.class);
	
	@Resource
	private IDoctorTypeService doctorTypeService;
	@Override
	public Map<String, Object> insertDoctorType(DoctorType doctorType, BindingResult result) {
		// 检查数据是否存在
		Map<String, Object> dataMap = doctorTypeService.getDoctorTypeByFiled(doctorType);

		if (dataMap != null && dataMap.size() > 0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EXISTS, Message.bundle("data.exists"));
		}
		if (doctorTypeService.insertDoctorType(doctorType)> 0) {
			// 新增成功
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("insert.success"));
		}
		// 新增失败
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("insert.fail"));
	
	}

	@Override
	public Map<String, Object> updateDoctorType(Integer id, DoctorType doctorType, BindingResult result) {
		//检查数据是否存在
		doctorType.setId(id);
		// 得到原数据
		Map<String, Object> adds = doctorTypeService.getDoctorTypeDetail(doctorType);
		if (adds==null || adds.size() <=0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("doctorType.empty"));
		}
		Object obj = adds.get("id");
		if (obj != null) {
			doctorType.setId((Integer) obj);
		}
		Map<String, Object> dataMap = doctorTypeService.getDoctorTypeByFiled(doctorType);
		if (dataMap != null && dataMap.size() > 0) {
			// 数据已存在
			return ResultMap.convertMap(ResultCode.CODE_DATA_EXISTS, Message.bundle("data.exists"));
		}
		// 设置实例的id属性
		if (doctorTypeService.updateDoctorType(doctorType) > 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("update.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("update.fail"));
	}

	@Override
	public Map<String, Object> getDoctorTypeList(DoctorType doctorType, BindingResult result,HttpServletRequest req) {
		 HttpSession session=req.getSession();
		 if(session.getAttribute("user")!=null){
			 
			 Map<String, Object> resultMap = new HashMap<>();
			 //得到返回数据
			 List<Map<String, Object>> dataList = doctorTypeService.getDoctorTypeList(doctorType);
			 if (dataList != null && dataList.size() > 0) {
				 //得到数据总数
				 resultMap.put(Global.DATA_TOTAL, doctorType.getTotal());
				 resultMap.put(Global.DATA_ROWS, dataList);
				 return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
			 }
			 return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
		 }else{
			 return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		 }
	}

	@Override
	public Map<String, Object> getDoctorTypeDetail(Integer id, DoctorType doctorType) {
	    // 设置实例的id属性
        doctorType.setId(id);
		Map<String, Object> resultList = doctorTypeService.getDoctorTypeDetail(doctorType);
		if (resultList != null && resultList.size() > 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultList, Message.bundle("query.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
	}

	@Override
	public Map<String, Object> deleteDoctorType(Integer id, DoctorType doctorType) {
		 // 设置实例的id属性
		doctorType.setId(id);
		Map<String, Object> resultList = doctorTypeService.getDoctorTypeDetail(doctorType); 
		if (resultList == null || resultList.size() <= 0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY,Message.bundle("doctorType.empty"));
		}
		//执行删除
		if (doctorTypeService.deleteDoctorType(doctorType) >0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS,Message.bundle("delete.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("delete.fail"));
	}

}
