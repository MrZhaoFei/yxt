package org.system.controller.iface.user.healthtest;

import java.util.Map;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.user.healthtest.UserDailyBloodSugar;
import org.utils.spring.Groups;

/**
 * @ClassName IUserDailyBloodSugarController
 * @author <font color="red"><b>LiuMrLiu</b></font>
 * @date 2016年3月21日 上午11:08:04
 * @version 1.0
 * @description 用户血糖
 */
@RequestMapping(value = { "/user" })
public interface IUserDailyBloodSugarController {

	/**
	 * @author <font color="green"><b>LiuGangQiang</b></font>
	 * @param userDailyBloodSugar
	 * @param result
	 * @return
	 * @date 2016年3月18日 下午5:30:14
	 * @version 1.0
	 * @description 新增用户血糖
	 */
	@RequestMapping(value = "/userDailyBloodSugar", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("userDailyBloodSugar:insert")
	public Map<String, Object> insertUserDailyBloodSugar(@Validated({ Groups.Insert.class }) UserDailyBloodSugar userDailyBloodSugar,
			BindingResult result,@RequestHeader(value = "token", required = false) String token);
	
	/**
	 * 医生 新增用户血糖
	 * 
	 * @param userDailyBloodSugar
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/doctor/userDailyBloodSugar", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> insertDoctorUserDailyBloodSugar(@Validated({ Groups.Other.class }) UserDailyBloodSugar userDailyBloodSugar,
			BindingResult result,@RequestHeader(value = "token", required = false) String token);

	/**
	 * @author <font color="green"><b>LiuGangQiang</b></font>
	 * @param userDailyBloodSugarId
	 * @param userDailyBloodSugar
	 * @param result
	 * @return
	 * @date 2016年3月18日 下午5:30:26
	 * @version 1.0
	 * @description 修改用户血糖
	 */
	@RequestMapping(value = "/userDailyBloodSugar/{userDailyBloodSugarId}", method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("userDailyBloodSugar:update")
	public Map<String, Object> updateUserDailyBloodSugar(@PathVariable("userDailyBloodSugarId") Integer userDailyBloodSugarId,
			@Validated({ Groups.Update.class }) UserDailyBloodSugar userDailyBloodSugar, BindingResult result);

	/**
	 * @author <font color="green"><b>LiuGangQiang</b></font>
	 * @param userDailyBloodSugar
	 * @return
	 * @date 2016年3月18日 下午5:30:38
	 * @version 1.0
	 * @description 用户血糖列表
	 */
	@RequestMapping(value = "/userDailyBloodSugars", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("userDailyBloodSugar:list")
	public Map<String, Object> getUserDailyBloodSugarList(@Validated({ Groups.Select.class }) UserDailyBloodSugar userDailyBloodSugar,
			BindingResult result,@RequestHeader(value = "token", required = false) String token);
	
	/**
	 * 医生查询 用户血糖列表
	 * 
	 * @param userDailyBloodSugar
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/doctor/userDailyBloodSugars", method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> getDoctorUserDailyBloodSugarList(@Validated({ Groups.Select.class }) UserDailyBloodSugar userDailyBloodSugar,
			BindingResult result,@RequestHeader(value = "token", required = false) String token);

	/**
	 * @author <font color="green"><b>LiuGangQiang</b></font>
	 * @param userDailyBloodSugarId
	 * @param userDailyBloodSugar
	 * @return
	 * @date 2016年3月18日 下午5:30:48
	 * @version 1.0
	 * @description 用户血糖详情
	 */
	@RequestMapping(value = "/userDailyBloodSugar/{userDailyBloodSugarId}", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("userDailyBloodSugar:detail")
	public Map<String, Object> getUserDailyBloodSugarDetail(@PathVariable("userDailyBloodSugarId") Integer userDailyBloodSugarId,
			UserDailyBloodSugar userDailyBloodSugar);
}