package org.system.controller.impl.content;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.system.entity.content.Content;
import org.system.entity.content.ContentType;
import org.core.result.ResultCode;
import org.core.result.ResultMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.validation.BindingResult;
import org.system.Global;
import org.system.controller.iface.content.IContentTypeController;
import org.system.message.Message;
import org.system.service.impl.content.ContentService;
import org.system.service.impl.content.ContentTypeService;

@Controller
public class ContentTypeController implements IContentTypeController{
	
	
	Logger log = LoggerFactory.getLogger(ContentTypeController.class);
	
	@Resource
	private ContentTypeService contentTypeService;
	@Resource
	private  ContentService contentService;


	/**
	 * 删除模板类型    需要先删除短信模板类型中的内容
	 */
	@Override
	@Transactional
	public Map<String, Object> deleteContentType(Integer id, ContentType contentType, BindingResult result) {
		
		// 设置实例id属性
		contentType.setId(id);
		// 创建短信内容对象
		Content content=new Content();
		content.setId(id);
		contentService.deleteContentByContentTypeId(content);// 删除短信内容 通过短信模板
		// 执行修改操作
		if (contentTypeService.deleteContentType(contentType)> 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("delete.success"));
		}else{
			throw new RuntimeException();
		}
		
	}
 
	/**
	 * 所有模板类型列表
	 */
	@Override
	public Map<String, Object> getContentTypeList(ContentType contentType, BindingResult result,HttpServletRequest req) {
		// 获取session
		 HttpSession session=req.getSession();
		if( session.getAttribute("user")!=null){
         
			// 定义返回对象
			Map<String, Object> resultMap = new HashMap<>();
			List<Map<String, Object>> sttList = contentTypeService.getContentTypes(contentType);
			if (sttList != null && sttList.size() > 0) {
				// 得到数据总数
				resultMap.put(Global.DATA_TOTAL, contentType.getTotal());
				resultMap.put(Global.DATA_ROWS, sttList);
				return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
			}
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
		}else{
			return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		}
	 
	}
	/**
	 * 模板类型细节
	 */

	@Override
	public Map<String, Object> getContentTypeDetail(Integer id, ContentType contentType,
			BindingResult result) {
		 // 设置实例的id属性
		contentType.setId(id);
				Map<String, Object> resultList = contentTypeService.getContentTypeDetail(contentType);
				if (resultList != null && resultList.size() > 0) {
					return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultList, Message.bundle("query.success"));
				}
				return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
	}

	/**
	 * 新增模板类型
	 */
	@Override
	public Map<String, Object> insertContentType(ContentType contentType, BindingResult result) {
		 // 检查数据是否存在
		Map<String, Object> sttMap = contentTypeService.getContentTypeByFiled(contentType);
		if (sttMap != null && sttMap.size() > 0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EXISTS, Message.bundle("data.exists"));
		}
		// 执行新增操作
		if (contentTypeService.insertContentType(contentType)> 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("insert.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("insert.fail"));
	}
    
	/**
	 * 修改模板类型
	 */
	@Override
	public Map<String, Object> updatetContentType(Integer id, ContentType contentType, BindingResult result) {
		contentType.setId(id);
		// 检查数据是否存在
		Map<String, Object> sttMap = contentTypeService.getContentTypeByFiled(contentType);
		if (sttMap != null && sttMap.size() > 0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EXISTS, Message.bundle("data.exists"));
		}
		// 执行修改操作
		if (contentTypeService.updateContentType(contentType)> 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("update.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("update.fail"));
	}

}
