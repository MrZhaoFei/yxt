package org.system.controller.iface;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.DoctorLevel;
import org.utils.spring.Groups;

@RequestMapping("/admin")
public interface IDoctorLevelController {
	/**
	 * 新增
	 * @param doctorLevel
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/doctorLevel/insert", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("doctorLevel:insert")
	public Map<String, Object> insertDoctorLevel(@Validated({ Groups.Insert.class }) DoctorLevel doctorLevel, BindingResult result);
	
	

	/**
	 * 修改
	 * @param id
	 * @param doctorLevel
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/doctorLevel/{id}/update", method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("doctorLevel:update")
	public Map<String, Object> updateDoctorLevel(@PathVariable("id") Integer id,
			@Validated({ Groups.Update.class }) DoctorLevel doctorLevel, BindingResult result);
	
	
	/**
	 * 所有的
	 * @param doctorLevel
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/doctorLevel", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("doctorLevel:list")
	public Map<String, Object> getDoctorLevelList(@Validated({ Groups.Select.class }) DoctorLevel doctorLevel, BindingResult result,HttpServletRequest req);

	
	/**
	 * 单个信息
	 * @param Id
	 * @param DoctorLevel
	 * @return
	 */
	@RequestMapping(value = "/doctorLevel/{id}", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("doctorLevel:detail")
	public Map<String, Object> getDoctorLevelDetail(@PathVariable("id") Integer id, DoctorLevel doctorLevel);
	
	
	/**
	 * 删除
	 * @param Id
	 * @param DoctorLevel
	 * @return
	 */
	@RequestMapping(value = "/doctorLevel/{id}/delete", method = RequestMethod.DELETE)
	@ResponseBody
	@RequiresPermissions("doctorLevel:delete")
	public  Map<String, Object> deleteDoctorLevel(@PathVariable("id") Integer id, DoctorLevel doctorLevel);
	

	
	
	
	
	
}
