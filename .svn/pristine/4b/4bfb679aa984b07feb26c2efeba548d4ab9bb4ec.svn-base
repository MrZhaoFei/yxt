package org.system.controller.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.core.result.ResultCode;
import org.core.result.ResultMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.system.Global;
import org.system.controller.iface.IDepartmentController;
import org.system.entity.Department;
import org.system.message.Message;
import org.system.service.iface.IDepartmentService;
@Controller
public class DepartmentController implements IDepartmentController {
	
	Logger log = LoggerFactory.getLogger(DepartmentController.class);

	@Resource
	private IDepartmentService departmentService;

	@Override
	public Map<String, Object> insertDepartment(Department department, BindingResult result) {
		// 查询父类是否存在
		if (department.getpid() != null) {
			Department departmentTemp = new Department();
			departmentTemp.setId(department.getpid());
			if (departmentService.getDepartmentDetail(departmentTemp)== null) {
				return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("address.parent.empty"));
			}
		}
		// 检查数据是否存在
		Map<String, Object> dataMap = departmentService.getDepartmentDetail(department);
		if (dataMap != null && dataMap.size() > 0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EXISTS, Message.bundle("data.exists"));
		}
		if (departmentService.insertDepartment(department) > 0) {
			// 新增成功
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("insert.success"));
		}
		// 新增失败
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("insert.fail"));
	}

	@Override
	public Map<String, Object> updateDepartment(Integer id, Department department, BindingResult result) {
		//检查数据是否存在
		department.setId(id);
		// 得到原数据
		Map<String, Object> adds = departmentService.getDepartmentDetail(department);
		if (adds==null || adds.size() <=0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("department.empty"));
		}
		Object obj = adds.get("pid");
		if (obj != null) {
			department.setpid((Integer) obj);
		}
		Map<String, Object> dataMap = departmentService.getDepartmentByFiled(department);
		if (dataMap != null && dataMap.size() > 0) {
			// 数据已存在
			return ResultMap.convertMap(ResultCode.CODE_DATA_EXISTS, Message.bundle("data.exists"));
		}
		// 设置实例的id属性
		if (departmentService.updateDepartment(department) > 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("update.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("update.fail"));
	}

	@Override
	public Map<String, Object> getDepartmentList(Department department, BindingResult result,HttpServletRequest req) {
		 HttpSession session=req.getSession();
		 if(session.getAttribute("user")!=null){
			 
			 Map<String, Object> resultMap = new HashMap<>();
			 List<Map<String, Object>> dataList = departmentService.getDepartmentList(department);
			 if (dataList != null && dataList.size() > 0) {
				 resultMap.put(Global.DATA_TOTAL, department.getTotal());
				 resultMap.put(Global.DATA_ROWS, dataList);
				 return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
			 }
			 return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
		 }else{
			 return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		 }
	}

	@Override
	public Map<String, Object> getDepartmentDetail(Integer id, Department department) {
		// 设置实例的id属性
		department.setId(id);
		Map<String, Object> resultList = departmentService.getDepartmentDetail(department);
		if (resultList != null && resultList.size() > 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultList, Message.bundle("query.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
	}

	@Override
	public Map<String, Object> deleteDepartment(Integer id, Department department) {
		 // 设置实例的id属性
		department.setId(id);
		Map<String, Object> resultList =departmentService.getDepartmentDetail(department);
		if (resultList == null || resultList.size() <= 0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY,Message.bundle("department.empty"));
		}
		//执行删除
		if (departmentService.deleteDepartment(department) >0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS,Message.bundle("delete.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("delete.fail"));
	}

	@Override
	public Map<String, Object> getDepartmentAllListName(Department department,BindingResult result) {
		//定义返回对象
		Map<String, Object> resultMap = new HashMap<>();
		List<Map<String, Object>> dataList = departmentService.getDepartmentAllList(department);
		if (dataList != null && dataList.size() > 0) {
			resultMap.put(Global.DATA_TOTAL, department.getTotal());
			resultMap.put(Global.DATA_ROWS, dataList);
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
	}

}
