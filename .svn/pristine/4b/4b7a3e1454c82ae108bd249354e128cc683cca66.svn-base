package org.system.controller.impl.service.transfer;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.core.result.ResultCode;
import org.core.result.ResultMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.system.Global;
import org.system.controller.iface.service.transfer.IImageConsultationRecordsInfoController;
import org.system.entity.service.transfer.ImageConsultationRecordsInfo;
import org.system.message.Message;
import org.system.service.iface.service.transfer.IImageConsultationRecordsInfoService;

import net.sf.ehcache.CacheManager;
import net.sf.ehcache.Element;

@Controller
public class ImageConsultationRecordsInfoController implements IImageConsultationRecordsInfoController{

	Logger log = LoggerFactory.getLogger(ImageConsultationRecordsInfoController.class);
	@Resource
	private CacheManager cache;
	@Resource
	private IImageConsultationRecordsInfoService imageConsultationRecordsInfoService; 
	
	@Override
	public Map<String, Object> getImageConsultationRecordsInfoList(
			ImageConsultationRecordsInfo imageConsultationRecordsInfo, BindingResult result, String token) {
		Element element=cache.getCache(Global.CACHE_DOCTOR).get(token);
		if (element!=null) {
			@SuppressWarnings("unchecked")
			Map<String, Object> doctorMap = (Map<String, Object>) element.getObjectValue();
			// 设置原医生ID
			imageConsultationRecordsInfo.setSrcDoctorId((Integer)doctorMap.get("id"));
			// 定义返回对象
			Map<String, Object> resultMap = new HashMap<>();
			List<Map<String, Object>> transList = imageConsultationRecordsInfoService.getImageConsultationRecordsInfoList(imageConsultationRecordsInfo);
			if (transList != null && transList.size() > 0) {
				// 得到数据总数
				resultMap.put(Global.DATA_TOTAL, imageConsultationRecordsInfo.getTotal());
				resultMap.put(Global.DATA_ROWS, transList);
				return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
			}
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, resultMap, Message.bundle("query.empty"));
		} else {
			return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		}
	}
	
	@Override
	public Map<String, Object> getImageConsultationDetailyDetailHistory(Integer imageConsultationRecordsId,
			ImageConsultationRecordsInfo imageConsultationRecordsInfo, BindingResult result, String token) {
		// 缓存中获取医生数据
		Element element = cache.getCache(Global.CACHE_DOCTOR).get(token);
		if (element != null) {
			@SuppressWarnings("unchecked")
			Map<String, Object> userMap = (Map<String, Object>) element.getObjectValue();
			imageConsultationRecordsInfo.setId(imageConsultationRecordsId);
			// 定义返回对象
			Map<String, Object> transMap = imageConsultationRecordsInfoService.getImageConsultationRecordsInfoDetail(imageConsultationRecordsInfo);
			if (transMap != null && transMap.size() > 0) {
				if ((int)userMap.get("id") != (int)transMap.get("srcDoctorId")) {
					return ResultMap.convertMap(ResultCode.CODE_PERMISSION_ERROR, Message.bundle("record.is.outside.doctor"));
				}
				return ResultMap.convertMap(ResultCode.CODE_SUCCESS, transMap, Message.bundle("query.success"));
			}
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
		} else {
			return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		}
	}
}
