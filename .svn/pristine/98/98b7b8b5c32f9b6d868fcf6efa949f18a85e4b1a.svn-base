package org.system.service.impl.service.resp;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;
import org.system.entity.service.resp.ServiceRespTask;
import org.system.mapper.service.resp.ServiceRespTaskMapper;
import org.system.service.iface.service.resp.IServiceRespTaskService;

@Service
public class ServiceRespTaskService implements IServiceRespTaskService {
	@Resource
	private ServiceRespTaskMapper mapper;

	@Override
	public Map<String, Object> getServiceRespTaskByFild(ServiceRespTask serviceRespTask) {
		return mapper.checkExists(serviceRespTask);
	}

	@Override
	public int insertServiceRespTask(ServiceRespTask serviceRespTask) {
		return mapper.insert(serviceRespTask);
	}

	@Override
	public int updateServiceRespTask(ServiceRespTask serviceRespTask) {
		return mapper.update(serviceRespTask);
	}

	@Override
	public List<Map<String, Object>> getServiceRespTaskList(ServiceRespTask serviceRespTask) {
		return mapper.queryAll(serviceRespTask);
	}

	@Override
	public Map<String, Object> getServiceRespTaskDetail(ServiceRespTask serviceRespTask) {
		return mapper.queryOne(serviceRespTask);
	}

	@Override
	public List<Map<String, Object>> getServiceRespTaskListByuser(ServiceRespTask serviceRespTask) {
		return mapper.getServiceRespTaskListByuser(serviceRespTask);
	}

	@Override
	public int updateServiceRespTaskRemind(ServiceRespTask serviceRespTask) {
		return mapper.updateServiceRespTaskRemind(serviceRespTask);
	}

	@Override
	public List<Map<String, Object>> getTaskStatusByUnfinished(ServiceRespTask serviceRespTask) {
		return mapper.getTaskStatusByUnfinished(serviceRespTask);
	}

	@Override
	public int deleteServiceRespTask(ServiceRespTask serviceRespTask) {
		return mapper.delete(serviceRespTask);
	}

	@Override
	public List<Map<String, Object>> getUnfinishedTransTreatDetailyList(ServiceRespTask serviceRespTask) {
		return mapper.getUnfinishedTransTreatDetailyList(serviceRespTask);
	}

	@Override
	public List<Map<String, Object>> getUnfinishedImageConsultationDetaily(ServiceRespTask serviceRespTask) {
		return mapper.getUnfinishedImageConsultationDetaily(serviceRespTask);
	}
}
