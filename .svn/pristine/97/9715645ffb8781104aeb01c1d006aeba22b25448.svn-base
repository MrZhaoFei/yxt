package org.system.controller.iface;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.Address;
import org.utils.spring.Groups;




@RequestMapping("/admin")
public interface IAddressController {
	
	
	
	/**
	 * 所有的
	 * @param address
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/address", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("address:list")
	public Map<String, Object> getAddressList(@Validated({ Groups.Select.class }) Address address, BindingResult result,HttpServletRequest req);

	
	
	
	
	/**
	 * 新增
	 * @param address
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/address/insert", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("address:insert")
	public Map<String, Object> insertAddress(@Validated({ Groups.Insert.class }) Address address, BindingResult result);

	/**
	 * 修改
	 * @param id
	 * @param address
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/address/{id}/update", method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("address:update")
	public Map<String, Object> updateAddress(@PathVariable("id") Integer id,
			@Validated({ Groups.Update.class }) Address address, BindingResult result);
	
	
	
	/**
	 * 
	 * @param pid
	 * @param address
	 * @param result
	 * @return
	 */
	
	@RequestMapping(value = { "/address/{pid}/child" }, method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("address:childlist")
	public Map<String, Object> getAddressChildList(@PathVariable("pid") Integer pid,
			@Validated({ Groups.Select.class }) Address address, BindingResult result);
	
	
	
	
	@RequestMapping(value = "/address/{id}/delete", method = RequestMethod.DELETE)
	@ResponseBody
	@RequiresPermissions("address:delete")
	public  Map<String, Object> deleteAddress(@PathVariable("id") Integer id, Address address);
	
	
	
	
	@RequestMapping(value = "/address/{id}/detail", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("addresse:detail")
	public Map<String, Object> getAddressDetail(@PathVariable("id") Integer id, Address address);
	
	
	
	
	@RequestMapping(value = { "/address/{pid}/name" }, method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("address:list")
	public Map<String, Object> getAddress(@PathVariable("pid") String pid,
			@Validated({ Groups.Select.class }) Address address, BindingResult result);
	
	
	
	@RequestMapping(value = "/addressMax", method = RequestMethod.GET)
	@ResponseBody
	
	public Map<String, Object> getAddressMaxId(@Validated({ Groups.Select.class }) Address address, BindingResult result);
	
	
	
	
	@RequestMapping(value = { "/address/{id}" }, method = RequestMethod.GET)
	@ResponseBody	
	public Map<String, Object> getAddressCodeValue(@PathVariable("id") Integer id, Address address);
	
	
	
}
