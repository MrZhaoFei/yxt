package org.system.controller.impl.about;
/**
 * 关于我们
 */
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.core.result.ResultCode;
import org.core.result.ResultMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.system.Global;
import org.system.controller.iface.about.ISysAboutController;
import org.system.entity.about.SysAbout;
import org.system.message.Message;
import org.system.service.iface.about.ISysAboutService;

@Controller
public class SysAboutController implements ISysAboutController {
	   
	Logger log = LoggerFactory.getLogger(SysAboutController.class);
	
	@Resource
	private ISysAboutService sysAboutService;
	
	
	@Override	
	public Map<String, Object> insertSysAbout(SysAbout sysAbout, BindingResult result) {
		 // 检查数据是否存在
		Map<String, Object> sttMap = sysAboutService.getSysAboutByFiled(sysAbout);
		if (sttMap != null && sttMap.size() > 0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EXISTS, Message.bundle("data.exists"));
		}
		// 执行新增操作
		if (sysAboutService.insertSysAbout(sysAbout)> 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("insert.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("insert.fail"));
	}

	@Override
	public Map<String, Object> updatetSysAbout(Integer id, SysAbout sysAbout, BindingResult result) {
		sysAbout.setId(id);
		// 检查数据是否存在
		Map<String, Object> sttMap = sysAboutService.getSysAboutByFiled(sysAbout);
		if (sttMap != null && sttMap.size() > 0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EXISTS, Message.bundle("data.exists"));
		}
		// 执行修改操作
		if (sysAboutService.updateSysAbout(sysAbout)> 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("update.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("update.fail"));
	}

	@Override
	public Map<String, Object> deleteContentType(Integer id, SysAbout sysAbout, BindingResult result) {
		sysAbout.setId(id);
		// 执行修改操作
		if (sysAboutService.deleteSysAbout(sysAbout)> 0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("delete.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("delete.fail"));
	}

	@Override
	public Map<String, Object> getSysAboutList(SysAbout sysAbout, BindingResult result, HttpServletRequest req) {
		 HttpSession session=req.getSession();
			if( session.getAttribute("user")!=null){
				// 定义返回对象
				Map<String, Object> resultMap = new HashMap<>();
				List<Map<String, Object>> sttList = sysAboutService.getSysAbout(sysAbout);
				if (sttList != null && sttList.size() > 0) {
					// 得到数据总数
					resultMap.put(Global.DATA_TOTAL, sysAbout.getTotal());
					resultMap.put(Global.DATA_ROWS, sttList);
					return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
				}
				return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
			}else{
				return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
			}
	}

	@Override
	public Map<String, Object> getSysAboutDetail(Integer id, SysAbout sysAbout, BindingResult result) {
		 // 设置实例的id属性
		       sysAbout.setId(id);
				Map<String, Object> resultList = sysAboutService.getSysAboutDetail(sysAbout);
				if (resultList != null && resultList.size() > 0) {
					return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultList, Message.bundle("query.success"));
				}
				return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
	}

}
