package org.system.controller.iface.user;

import java.util.Map;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.user.UserFollow;
import org.system.entity.user.UserFollow.deleteFollow;
import org.utils.spring.Groups;

/**
 * @ClassName IUserFollowController
 * @author <font color="red"><b>LiuMrLiu</b></font>
 * @date 2016年3月21日 上午11:08:04
 * @version 1.0
 * @description 用户用户关注领域中间类
 */
@RequestMapping
public interface IUserFollowController {

	/**
	 * @author <font color="green"><b>LiuGangQiang</b></font>
	 * @param userFollow
	 * @param result
	 * @return
	 * @date 2016年3月18日 下午5:30:14
	 * @version 1.0
	 * @description 新增用户关注领域
	 */
	@RequestMapping(value = "/doctor/userFollow", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("userFollow:insert")
	public Map<String, Object> insertUserFollow(@Validated({ Groups.Insert.class }) UserFollow userFollow,
			BindingResult result);
	
	/**
	 * 用户新增 关注领域
	 * 
	 * @param userFollow
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/user/userFollowByUser", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> insertUserFollowByUser(@Validated({ Groups.Other.class }) UserFollow userFollow,
			BindingResult result,@RequestHeader(value = "token", required = false) String token);

	/**
	 * @author <font color="green"><b>LiuGangQiang</b></font>
	 * @param userFollow
	 * @return
	 * @date 2016年3月18日 下午5:30:38
	 * @version 1.0
	 * @description 医生获取用户关注领域列表
	 */
	@RequestMapping(value = "/doctor/userFollows/{userId}", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("userFollow:list")
	public Map<String, Object> getUserFollowList(@PathVariable("userId") Integer userId,
			@Validated({ Groups.Select.class }) UserFollow userFollow, BindingResult result);

	/**
	 * @Title: getUserFollowList
	 * @Description: 用户获取自己的关注领域列表
	 * @param userFollow
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/user/userFollows", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("userFollow:list")
	public Map<String, Object> getUserFollowList(@Validated({ Groups.Select.class }) UserFollow userFollow,
			BindingResult result, @RequestHeader(value = "token", required = false) String token);

	/**
	 * @author <font color="green"><b>LiuGangQiang</b></font>
	 * @param userFollow
	 * @param result
	 * @return
	 * @date 2016年3月21日 下午2:05:49
	 * @version 1.0
	 * @description 删除用户关注问题
	 */
	@RequestMapping(value = "/doctor/userFollow", method = RequestMethod.DELETE)
	@ResponseBody
	@RequiresPermissions("userFollow:detail")
	public Map<String, Object> deleteUserFollow(@Validated({ Groups.Delete.class }) UserFollow userFollow,
			BindingResult result);
	
	/**
	 * 用户删除关注领域
	 * 
	 * @param userFollow
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/user/userFollowByUser", method = RequestMethod.DELETE)
	@ResponseBody
	public Map<String, Object> deleteUserFollowByUser(@Validated({ deleteFollow.class }) UserFollow userFollow,
			BindingResult result,@RequestHeader(value = "token", required = false) String token);
}