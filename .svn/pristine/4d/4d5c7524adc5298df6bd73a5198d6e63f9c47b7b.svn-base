package org.system.service.impl.contract;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;
import org.system.entity.contract.Contract;
import org.system.mapper.contract.ContractMapper;
import org.system.service.iface.contract.IContractService;

@Service
public class ContractService implements IContractService {
	@Resource
	private ContractMapper mapper;

	@Override
	public Map<String, Object> getContractByFild(Contract contract) {
		return mapper.checkExists(contract);
	}

	@Override
	public int insertContract(Contract contract) {
		return mapper.insert(contract);
	}

	@Override
	public int updateContract(Contract contract) {
		return mapper.update(contract);
	}

	@Override
	public List<Map<String, Object>> getContractList(Contract contract) {
		return mapper.queryAll(contract);
	}

	@Override
	public Map<String, Object> getContractDetail(Contract contract) {
		return mapper.queryOne(contract);
	}

	@Override
	public List<Map<String, Object>> getContractListByDoctor(Contract contract) {
		return mapper.getContractListByDoctor(contract);
	}

	@Override
	public Map<String, Object> getContractAgreement(Contract contract) {
		return mapper.getContractAgreement(contract);
	}

	@Override
	public int updateContractByMap(Map<String, Object> param) {
		return mapper.updateContractByMap(param);
	}

	@Override
	public Map<String, Object> updateContractAddressById(Contract contract) {
		return mapper.updateContractAddressById(contract);
	}
}
