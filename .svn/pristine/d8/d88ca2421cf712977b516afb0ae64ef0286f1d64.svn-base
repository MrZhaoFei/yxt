package org.system.controller.iface.user.healthInfo;

import java.util.Map;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.user.healthinfo.HealthInfo;
import org.utils.spring.Groups;

@RequestMapping()
public interface IHealthInfoController {
	/**
	 * 新增个人健康档案表
	 * @param healthInfo
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = { "/doctor/healthInfo" }, method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> insertHealthInfo(
			@Validated({ Groups.Insert.class }) HealthInfo healthInfo, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	
	/**
	 * 修改个人健康档案
	 * @param healthInfo
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = { "/doctor/healthInfo/{archivesId}" }, method = RequestMethod.PUT)
	@ResponseBody
	public Map<String, Object> updatetHealthInfo(@PathVariable("archivesId") Integer healthInfo1Id,
			@Validated({ Groups.Update.class }) HealthInfo healthInfo, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);
	
	
	/**
	 * 查询个人健康档案列表
	 * @param healthInfo
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/doctor/healthInfos", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("healthInfo:list")
	public Map<String, Object> gethealthInfoList(@Validated({ Groups.Select.class }) HealthInfo healthInfo,
			BindingResult result,@RequestHeader(value = "token", required = false) String token);

	/**
	 * 用户查询健康档案列表
	 * 
	 * @param healthInfo
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/user/healthInfos", method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> gethealthInfoListByUser(@Validated({ Groups.Other.class }) HealthInfo healthInfo,
			BindingResult result,@RequestHeader(value = "token", required = false) String token);

}
