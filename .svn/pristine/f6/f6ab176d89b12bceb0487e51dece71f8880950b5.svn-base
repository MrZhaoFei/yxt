package org.system.controller.impl.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.core.result.ResultCode;
import org.core.result.ResultMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.system.Global;
import org.system.controller.iface.service.IServicePackController;
import org.system.entity.service.ServicePack;
import org.system.message.Message;
import org.system.service.iface.service.IServicePackService;

import net.sf.ehcache.CacheManager;
import net.sf.ehcache.Element;

@Controller
public class ServicePackController implements IServicePackController {
	Logger log = LoggerFactory.getLogger(ServicePackController.class);
	@Resource
	private IServicePackService servicePackService;
	@Resource
	private CacheManager cache;

	@Override
	public Map<String, Object> getServicePackListByUser(ServicePack servicePack, BindingResult result, String token) {
		// 缓存中获取用户数据
		Element element = cache.getCache(Global.CACHE_USER).get(token);
		if (element != null) {
			@SuppressWarnings("unchecked")
			Map<String, Object> userMap = (Map<String, Object>) element.getObjectValue();
			servicePack.setUserId((Integer) userMap.get("id"));
			// 定义返回对象
			Map<String, Object> resultMap = new HashMap<>();
			// 得到返回数据
			List<Map<String, Object>> dataList = servicePackService.getServicePackList(servicePack);
			if (dataList != null && dataList.size() > 0) {
				// 得到数据总数
				resultMap.put(Global.DATA_TOTAL, servicePack.getTotal());
				resultMap.put(Global.DATA_ROWS, dataList);
				return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
			}
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
		} else {
			return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		}
	}

	@Override
	public Map<String, Object> getServicePackDetailByUser(Integer servicePackId, ServicePack servicePack, String token) {
		// 缓存中获取用户数据
		Element element = cache.getCache(Global.CACHE_USER).get(token);
		if (element != null) {
			@SuppressWarnings("unchecked")
			Map<String, Object> userMap = (Map<String, Object>) element.getObjectValue();
			servicePack.setUserId((Integer) userMap.get("id"));
			// 设置主键
			servicePack.setId(servicePackId);
			// 查询详情
			Map<String, Object> resultMap = servicePackService.getServicePackDetail(servicePack);
			if (resultMap != null && resultMap.size() > 0) {
				return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
			}
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
		} else {
			return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		}
	}
	@Override
	public Map<String, Object> getServicePackDetailByDoctor(Integer servicePackId, ServicePack servicePack, String token) {
		// 缓存中获取用户数据
		Element element = cache.getCache(Global.CACHE_DOCTOR).get(token);
		if (element != null) {
			// 设置主键
			servicePack.setId(servicePackId);
			// 查询详情
			Map<String, Object> resultMap = servicePackService.getServicePackDetail(servicePack);
			if (resultMap != null && resultMap.size() > 0) {
				return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
			}
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
		} else {
			return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		}
	}

	@Override
	public Map<String, Object> getServicePackListByDoctor(ServicePack servicePack, BindingResult result, String token) {
		// 缓存中获取用户数据
		Element element = cache.getCache(Global.CACHE_DOCTOR).get(token);
		if (element != null) {
			// 定义返回对象
			Map<String, Object> resultMap = new HashMap<>();
			// 得到返回数据
			List<Map<String, Object>> dataList = servicePackService.getServicePackListByDoctor(servicePack);
			if (dataList != null && dataList.size() > 0) {
				// 得到数据总数
				resultMap.put(Global.DATA_TOTAL, servicePack.getTotal());
				resultMap.put(Global.DATA_ROWS, dataList);
				return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
			}
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
		} else {
			return ResultMap.convertMap(ResultCode.CODE_NO_LOGIN, Message.bundle("permission.no.login"));
		}
	}

}
