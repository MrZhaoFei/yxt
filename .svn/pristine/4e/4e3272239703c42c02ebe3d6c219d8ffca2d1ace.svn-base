package org.system.controller.iface.doctor;

import java.util.Map;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.address.Address;
import org.system.entity.doctor.DoctorGroup;
import org.utils.spring.Groups;

/**
 * @ClassName IDoctorGroupController
 * @author <font color="red"><b>LiuMrLiu</b></font>
 * @date 2016年3月17日 下午2:57:01
 * @version 1.0
 * @description 医生团队处理类
 */
@RequestMapping()
public interface IDoctorGroupController {

	/**
	 * @author <font color="green"><b>LiuGangQiang</b></font>
	 * @param doctorGroup
	 * @return
	 * @date 2016年3月18日 下午5:30:38
	 * @version 1.0
	 * @description 医生团队列表
	 */
	@RequestMapping(value = "/user/doctorGroups", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("doctorGroup:list")
	public Map<String, Object> getDoctorGroupList(@Validated({ Groups.Select.class }) DoctorGroup doctorGroup,BindingResult result,
			Address address);

	/**
	 * @author <font color="green"><b>LiuGangQiang</b></font>
	 * @param doctorGroup
	 * @param address
	 * @param result
	 * @return
	 * @date 2016年3月31日 上午11:23:12
	 * @version 1.0
	 * @description 查询医生团队成员
	 */
	@RequestMapping(value = {"/doctor/doctorGroupDoctors/{groupId}","/user/doctorGroupDoctors/{groupId}"}, method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("doctorGroupDoctor:list")
	public Map<String, Object> getDoctorGroupDoctorList(@PathVariable("groupId") Integer doctorGroupId,
			@Validated({ Groups.Select.class }) DoctorGroup doctorGroup, BindingResult result);

	/**
	 * @author <font color="green"><b>LiuGangQiang</b></font>
	 * @param doctorGroupId
	 * @param doctorGroup
	 * @return
	 * @date 2016年3月18日 下午5:30:48
	 * @version 1.0
	 * @description 医生团队详情
	 */
	@RequestMapping(value = {"/doctor/doctorGroup/{doctorGroupId}","/user/doctorGroup/{doctorGroupId}"}, method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("doctorGroup:detail")
	public Map<String, Object> getDoctorGroupDetail(@PathVariable("doctorGroupId") Integer doctorGroupId,
			DoctorGroup doctorGroup);

	/**
	 * @author <font color="green"><b>LiuGangQiang</b></font>
	 * @param doctorGroup
	 * @param session
	 * @return
	 * @date 2016年3月29日 上午9:59:33
	 * @version 1.0
	 * @description
	 */
	@RequestMapping(value = "/doctor/doctorGroupsByDoctor", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("doctorGroup:listByDoctor")
	public Map<String, Object> getDoctorGroupDetailByDoctor(DoctorGroup doctorGroup,
			@RequestHeader(value = "token", required = false) String token);
	
	
	/**
	 * 修改团队信息
	 * 
	 * @param doctorGroupId
	 * @param doctorGroup
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/doctor/doctorGroup/{groupId}", method = RequestMethod.PUT)
	@ResponseBody
	public Map<String, Object> updateDoctorGroup(@PathVariable("groupId") Integer doctorGroupId,
			@Validated({ Groups.Update.class }) DoctorGroup doctorGroup, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);
	
	/**
	 * 专家医生团队列表
	 * 
	 * @param doctorGroup
	 * @param result
	 * @param address
	 * @return
	 */
	@RequestMapping(value = "/user/expertDoctorGroups", method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> getExpertDoctorGroupList(@Validated({ Groups.Other.class }) DoctorGroup doctorGroup,BindingResult result,
			Address address);
	

	
}