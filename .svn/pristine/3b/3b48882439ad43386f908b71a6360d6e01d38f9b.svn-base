package org.system.controller.iface.order;

import java.util.Map;

import org.core.annotation.RequiresPermissions;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.order.UserOrder;
import org.utils.spring.Groups;

/**
 * @ClassName: IUserOrderController
 * @Description: 订单
 * @author: LiuGangQiang
 * @date: 2016年5月16日 上午10:54:08
 */
@RequestMapping(value = { "/user" })
public interface IUserOrderController {

	/**
	 * @Title: insertUserOrder
	 * @Description: 新增订单
	 * @param userOrder
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/userOrder", method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions("userOrder:insert")
	public Map<String, Object> insertUserOrder(@Validated({ Groups.Insert.class }) UserOrder userOrder,
			BindingResult result, @RequestHeader(value = "token", required = false) String token);

	/** 
	 * @Title: sureUserOrder 
	 * @Description: 用户确认订单
	 * @param orderNo 订单号
	 * @param userOrder
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/userOrder/sure/{orderNo}", method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions("userOrder:sure")
	@Transactional
	public Map<String, Object> sureUserOrder(@PathVariable("orderNo") String orderNo,
			@Validated({ Groups.Update.class }) UserOrder userOrder, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/** 
	 * @Title: getUserOrderList 
	 * @Description: 用户查询订单列表
	 * @param userOrder
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/userOrders", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("userOrder:list")
	public Map<String, Object> getUserOrderList(@Validated({ Groups.Select.class }) UserOrder userOrder,
			BindingResult result, @RequestHeader(value = "token", required = false) String token);

	/** 
	 * @Title: getUserOrderDetail 
	 * @Description: 用户查询订单详情
	 * @param userOrderId
	 * @param userOrder
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/userOrder/{userOrderId}", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("userOrder:detail")
	public Map<String, Object> getUserOrderDetail(@PathVariable("userOrderId") Integer userOrderId, UserOrder userOrder,
			@RequestHeader(value = "token", required = false) String token);
	
	/** 
	 * @Title: getUserOrderList 
	 * @Description: 医生查询订单列表
	 * @param userOrder
	 * @param result
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/doctor/userOrders", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("userOrder:list")
	public Map<String, Object> getUserOrderListByDoctor(@Validated({ Groups.Select.class }) UserOrder userOrder,
			BindingResult result, @RequestHeader(value = "token", required = false) String token);
	
	/** 
	 * @Title: getUserOrderDetail 
	 * @Description: 医生查询订单详情
	 * @param userOrderId
	 * @param userOrder
	 * @param token
	 * @return Map<String,Object>
	 */
	@RequestMapping(value = "/doctor/userOrder/{userOrderId}", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("userOrder:detail")
	public Map<String, Object> getUserOrderDetailByDoctor(@PathVariable("userOrderId") Integer userOrderId, UserOrder userOrder,
			@RequestHeader(value = "token", required = false) String token);
}