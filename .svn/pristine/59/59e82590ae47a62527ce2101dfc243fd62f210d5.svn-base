   // 时间转化
	function DateToString(date, format) {
        if (!date) return "";
        format = format || "yyyy-MM-dd HH:mm:ss";
        switch (typeof date) {
            case "string":
                date = new Date(date.replace(/-/, "/"));
                break;
            case "number":
                date = new Date(date);
                break;
        }
        if (!date instanceof Date) return "";
        var dict = {
            "yyyy": date.getFullYear(),
            "yy": (date.getFullYear() + "").substr(2),
            "M": date.getMonth() + 1,
            "d": date.getDate(),
            "H": date.getHours(),
            "m": date.getMinutes(),
            "s": date.getSeconds(),
            "MM": ("" + (date.getMonth() + 101)).substr(1),
            "dd": ("" + (date.getDate() + 100)).substr(1),
            "HH": ("" + (date.getHours() + 100)).substr(1),
            "mm": ("" + (date.getMinutes() + 100)).substr(1),
            "ss": ("" + (date.getSeconds() + 100)).substr(1)
        };
        return format.replace(/(yyyy|yy|MM?|dd?|HH?|ss?|mm?)/g, function () {
            return dict[arguments[0]];
        });
    }
	
	
	
	 // 地址联动
	  var AddressBox = function () {
		   var self = this;
		   this.selectboxs = ["codeName", "code_nameShi", "code_nameQu", "code_namebut", "code_nameSheQu"];
		   var len = this.selectboxs.length, i, obj;
		   for (i = 0; i < len; ++i) {					  
		        obj = $("#" + this.selectboxs[i]);				       
		        if(i<len){
			        obj.combobox({
			        	valueField:'code_value',   
			            textField:'name',
			            onChange: (function (index) {
			                return function (newValue, oldValue) {
			                	if(newValue && newValue.length > 0){
				                    self.Clear(index + 1);
				                    self.Load(index + 1, newValue);
			                    }
			                	
			                };
			            })(i)
			        });				        	
		        }
		        
		    }
		};
		
		AddressBox.prototype = {
		    Clear: function (index) {
		        var i, ob;
		        index = index || 0;
		        for (i = index; i < this.selectboxs.length; ++i) {
		            ob = $("#" + this.selectboxs[i]);
                ob.combobox("clear");	
                ob.combobox("loadData", []);
		        }
		    },
		    Load: function (index, pid, initvalue, fun) {//加载数据 (索引 pid 初始化 回调函数)
		    	index = index || 0 ;
		    	pid = pid || "156";
		        if (pid) {
			        var self = this;
		            $.ajax({
		                url: '/yxt-admin/admin/address/' + pid + '/name',
		                success: function (back) {
		                	if(back.data) {
			                	var rows = back.data.rows, ob = $("#" + self.selectboxs[index]);					          
		                        ob.combobox("loadData", rows);
			                	if(initvalue !== undefined && initvalue !== null){
			                		ob.combobox("setValue", parseInt(initvalue));
			                	}
			                	if(fun){
			                		fun(ob.combobox("getValue"));
			                	}
	                        }
		                    self = null;
		                    pid = null;
		                    v = null;
		                }
		            });
		        }
		    },
		    ReSet:function(){// 返回的结果
				 this.Clear();
				 // obj = [];
				 if(window.parent && window.parent.__hospital_adressdata){
					 var adressdata = window.parent.__hospital_adressdata ,len = this.selectboxs.length, i;
					 for (i = 0; i < len; ++i) {
						this.Load(i, adressdata[i-1], adressdata[i]);                        
					 }
				 }else{
				     this.Load();
				 }
		    },
		    GetVal:function(){// 获取combobox里的值   （实际上是code_value）
				   var len = this.selectboxs.length, i, val, selectlv = 0, code = "", selectlv = 1, code = 0;
				   for (i = len - 1; i >= selectlv; --i) {					  
					   val = $('#' + this.selectboxs[i]).combobox('getValue');
					   if(val.length>0){
						   code = val;
						   break;
					   }		        
				    }
				  return code;
		    },
		    SetAddress:function(code){// 修改地址的时候  先加载 set值		    	
		    	var codes = code.split(";"), len = codes.length, i=0 , pid = null;
		    	for(; i<len; ++i){
		    		this.Load(i, pid, codes[i]);
		    		pid = codes[i];
		    	}
		    	this.Load(i, pid);
		    	return this;
		    }
		};

		var addressbox = new AddressBox();

  