package org.system.controller.impl.hospiDepartDoctorRelation;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.core.result.ResultCode;
import org.core.result.ResultMap;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.validation.BindingResult;
import org.system.Global;
import org.system.controller.iface.hospiDepartDoctorRelation.IHospiDepartDoctorRelationController;
import org.system.entity.relation.HospiDepartDoctorRelation;
import org.system.message.Message;
import org.system.service.iface.HospiDepartDoctorRelation.IHospiDepartDoctorRelationService;

@Controller
public class HospiDepartDoctorRelationController implements IHospiDepartDoctorRelationController {
	Logger log = LoggerFactory.getLogger(HospiDepartDoctorRelationController.class);
	@Resource
	private IHospiDepartDoctorRelationService  hospiDepartDoctorRelationService;
	
	@Override
	@Transactional
	public Map<String, Object> insertHospiDepartDoctorRelation(HospiDepartDoctorRelation hospiDepartDoctorRelation,
			BindingResult result) {

       String hospId=hospiDepartDoctorRelation.getHospId();
       int hospId2=Integer.parseInt(hospId);
       String deptId=hospiDepartDoctorRelation.getDepeId();	
	   String[] a = deptId.split(",");	  
		for(int i=0;i<a.length;i++){
			int id=Integer.parseInt(a[i]);
			hospiDepartDoctorRelation.setDepartmentId(id);
			hospiDepartDoctorRelation.setHospitalId(hospId2);
			//执行新增操作
			if (hospiDepartDoctorRelationService.insertHospiDepartDoctorRelation(hospiDepartDoctorRelation)> 0) {
				// 新增成功
				return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("insert.success"));
			}
		}
		/*// 新增失败*/
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("insert.fail"));
		
	}

	
	
	
	@Override
	public Map<String, Object> getHospDept(Integer doctorId, HospiDepartDoctorRelation hospiDepartDoctorRelation,BindingResult result) {
		  
		
		hospiDepartDoctorRelation.setDoctorId(doctorId);
		 Map<String, Object> resultMap = new HashMap<>();
		 //得到返回数据
		 List<Map<String, Object>> dataList = hospiDepartDoctorRelationService.getHospDept(hospiDepartDoctorRelation);
		 if (dataList != null && dataList.size() > 0) {
			 //得到数据总数
			 resultMap.put(Global.DATA_TOTAL, hospiDepartDoctorRelation.getTotal());
			 resultMap.put(Global.DATA_ROWS, dataList);
			 return ResultMap.convertMap(ResultCode.CODE_SUCCESS, resultMap, Message.bundle("query.success"));
		 }
		 return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY, Message.bundle("query.empty"));
	}




	@Override
	public Map<String, Object> deleteHospiDepartDoctorRelation(Integer doctorId,
			HospiDepartDoctorRelation hospiDepartDoctorRelation) {				
		hospiDepartDoctorRelation.setDoctorId(doctorId);
		Map<String, Object> resultList =hospiDepartDoctorRelationService.getHospiDepartDoctorRelationByFiled(hospiDepartDoctorRelation);
		if (resultList == null || resultList.size() <= 0) {
			return ResultMap.convertMap(ResultCode.CODE_DATA_EMPTY,Message.bundle("title.empty"));
		}
		//执行删除操作
		if (hospiDepartDoctorRelationService.deleteHospiDepartDoctorRelation(hospiDepartDoctorRelation) >0) {
			return ResultMap.convertMap(ResultCode.CODE_SUCCESS, Message.bundle("delete.success"));
		}
		return ResultMap.convertMap(ResultCode.CODE_FAIL, Message.bundle("delete.fail"));
	}

}
