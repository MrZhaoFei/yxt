package org.system.controller.iface.service;

import java.util.Map;

import org.core.annotation.RequiresPermissions;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.service.UserService;
import org.utils.spring.Groups;

/**
 * @ClassName IUserServiceController
 * @author <font color="red"><b>LiuMrLiu</b></font>
 * @date 2016年3月21日 上午11:08:04
 * @version 1.0
 * @description 用户服务
 */
@RequestMapping
public interface IUserServiceController {


	/**
	 * @author <font color="green"><b>LiuGangQiang</b></font>
	 * @param userService
	 * @return
	 * @date 2016年3月18日 下午5:30:38
	 * @version 1.0
	 * @description 用户服务列表
	 */
	@RequestMapping(value = "/user/userServices", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("userService:list")
	public Map<String, Object> getUserServiceList(@Validated({ Groups.Select.class }) UserService userService,
			BindingResult result,@RequestHeader(value = "token", required = false) String token);

	
	
	/**
	 * 后台医生查询用户服务俩列表
	 * @param userService
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/doctor/userServicesByUser", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("userServicesByUser:list")
	public Map<String, Object> getuserServicesByUserList(@Validated({ Groups.Select.class,UserService.getServiceListByUser.class }) UserService userService,
			BindingResult result);
	
	/**
	 * 用户查询用户服务剩余次数
	 * 
	 * @param userService
	 * @param result
	 * @return
	 */
	@RequestMapping(value = "/user/userServicesByUserList", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("userServicesByUser:list")
	public Map<String, Object> getuserServicesByUser(@Validated({ Groups.Select.class }) UserService userService,
			BindingResult result,@RequestHeader(value = "token", required = false) String token);
	
	/**
	 * 用户最近使用服务信息
	 * 
	 * @param userService
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/user/userServicesByUserUsedList", method = RequestMethod.GET)
	@ResponseBody
	@RequiresPermissions("userServicesByUserUsed:list")
	public Map<String, Object> getuserServicesByUserUsed(@Validated({ Groups.Select.class }) UserService userService,
			BindingResult result,@RequestHeader(value = "token", required = false) String token);
	
	
}