package org.system.controller.iface.hospital;

import java.util.Map;

import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.system.entity.hospital.HospiDepartDoctorRelation;
import org.utils.spring.Groups;

@RequestMapping()
public interface IHospiDepartDoctorRelationController {
	
	/**
	 * 新增 医生与医院、科室关联
	 * 
	 * @param hospiDepartDoctorRelation
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = { "/doctor/hospiDepartDoctorRelation" }, method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> insertHospiDepartDoctorRelation(
			@Validated({ Groups.Insert.class }) HospiDepartDoctorRelation hospiDepartDoctorRelation, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);

	/**
	 * 查询医生与医院、科室关联 详情
	 * 
	 * @param hospiDepartDoctorRelationId
	 * @param hospiDepartDoctorRelation
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = { "/doctor/hospiDepartDoctorRelation/{id}" }, method = RequestMethod.PUT)
	@ResponseBody
	public Map<String, Object> updatetHospiDepartDoctorRelation(@PathVariable("id") Integer hospiDepartDoctorRelationId,
			@Validated({ Groups.Update.class }) HospiDepartDoctorRelation hospiDepartDoctorRelation, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);
	
	
	/**
	 *查询 医生与医院、科室关联 列表
	 * 
	 * @param hospiDepartDoctorRelation
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = "/doctor/hospiDepartDoctorRelations", method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> getHospiDepartDoctorRelationList(@Validated({ Groups.Select.class }) HospiDepartDoctorRelation hospiDepartDoctorRelation,
			BindingResult result,@RequestHeader(value = "token", required = false) String token);
	
	/**
	 * 删除医生与医院、科室关联
	 * 
	 * @param hospiDepartDoctorRelationId
	 * @param hospiDepartDoctorRelation
	 * @param result
	 * @param token
	 * @return
	 */
	@RequestMapping(value = { "/doctor/hospiDepartDoctorRelation/{id}" }, method = RequestMethod.DELETE)
	@ResponseBody
	public Map<String, Object> deletetHospiDepartDoctorRelation(@PathVariable("id") Integer hospiDepartDoctorRelationId, HospiDepartDoctorRelation hospiDepartDoctorRelation, BindingResult result,
			@RequestHeader(value = "token", required = false) String token);
	
	
	
}
